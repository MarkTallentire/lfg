{"version":3,"sources":["components/ui/Header.js","assets/crown.svg","assets/wand.svg","assets/sword.svg","assets/knife.svg","assets/lfggames.png","components/ui/Footer.js","components/Pages/LandingPage.js","ApiClient.js","components/Global/GooglePlacesLocationSearch.js","components/Features/RegistrationForm.js","components/Pages/RegisterPage.js","components/Pages/LoginPage.js","components/Pages/MyGroups.js","components/Pages/CreateGroup.js","components/Pages/UserSearch.js","components/App.js","components/ui/Theme.js","index.js","assets/cute.svg"],"names":["ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","elevation","useStyles","makeStyles","theme","appBar","zIndex","modal","backgroundColor","palette","background","default","toolbarMargin","mixins","toolbar","logoButton","logo","height","marginRight","breakpoints","down","tabContainer","marginLeft","tab","typography","minWidth","button","borderRadius","menu","menuItem","opacity","icon","verticalAlign","nestedDrawer","paddingLeft","spacing","drawer","drawerItem","activeDrawerItem","drawerItemEmphasised","primary","main","light","drawerItemPushBottom","alignSelf","burgerButton","nav","display","flexDirection","justifyContent","userNav","marginTop","avatar","width","textDecoration","Header","tabValue","setTabValue","menuSelectedIndex","setMenuSelectedIndex","classes","useTheme","matches","useMediaQuery","useState","anchorEl","setAnchorEl","openMenu","setOpenMenu","drawerOpen","setDrawerOpen","iOS","process","browser","test","navigator","userAgent","routes","currentUser","name","href","ariaOwns","undefined","ariaPopup","mouseOver","e","handleMenuClick","useEffect","i","length","window","location","pathname","currentTarget","handleMenuClose","tabs","value","onChange","index","className","map","route","key","label","component","Link","to","aria-owns","aria-haspopup","onMouseEnter","src","alt","username","color","variant","onClick","id","open","onClose","MenuListProps","onMouseLeave","paper","keepMounted","style","option","handleMenuItemClick","root","selected","disableBackdropTransition","disableDiscovery","anchor","onOpen","divider","disableTypography","localStorage","removeItem","setCurrentUser","position","disableRipple","module","exports","footer","borderTop","text","mainContainer","link","gridItem","margin","social","up","socialContainer","Footer","Hidden","smDown","Grid","container","justify","item","direction","alignItems","target","rel","heroContainer","heroContent","transform","ctaButtons","paddingTop","heroIcon","groupAvatar","moreInfoGrid","imageGrid","LandingPage","wand","sword","crown","cute","knife","Typography","align","Button","apiClient","axios","create","baseURL","interceptors","request","use","config","token","getItem","headers","Authorization","error","console","log","Promise","reject","googleAutoCompleteService","current","GooglePlacesLocationSearch","register","setValue","errors","loaded","useRef","options","setOptions","locationValue","setLocationValue","locationInputValue","setLocationInputValue","document","querySelector","script","createElement","setAttribute","appendChild","loadScript","fetch","useMemo","throttle","callback","getPlacePredictions","active","google","maps","places","AutocompleteService","input","results","newOptions","Autocomplete","filterOptions","x","noOptionsText","getOptionLabel","description","size","autoComplete","includeInputInList","filterSelectedOptions","event","newValue","place_id","onInputChange","newInputValue","renderInput","params","TextField","formInput","fullWidth","Boolean","googleplaceid","helperText","message","renderOption","structured_formatting","main_text_matched_substrings","parts","parse","main_text","match","offset","xs","part","fontWeight","highlight","secondary_text","useStyle","maxWidth","labelColour","secondary","checkboxLabel","validationSchema","yup","shape","required","emailaddress","email","password","min","dateofbirth","nullable","moment","diff","inperson","online","when","is","then","oneOf","termsandconditions","RegistrationForm","useForm","resolver","yupResolver","mode","criteriaMode","control","handleSubmit","setError","formState","onSubmit","data","format","post","response","setItem","catch","serverError","type","validationError","toLowerCase","inputRef","libInstance","utils","MomentUtils","initialFocusedDate","defaultValue","as","KeyboardDatePicker","inputVariant","openTo","maxDate","add","disableFuture","placeholder","FormControlLabel","Checkbox","form","disabled","isSubmitting","isDirty","title","marginBottom","minHeight","padding","formContainer","RegisterPage","innerContent","mdDown","Container","fixed","LoginPage","ApiClient","noGroupContainer","textAlign","media","cardContent","maxHeight","overflow","subtitle1","fontSize","footerMargin","MyGroups","groups","setGroups","get","gutterBottom","group","groupName","Card","CardActionArea","CardMedia","image","banner","CardContent","memberIds","CardActions","subtitle","groupname","CreateGroup","loadingRandom","setLoadingRandom","defaultValues","privacyLevel","getValues","FormControl","InputLabel","shrink","OutlinedInput","notched","endAdornment","InputAdornment","IconButton","Tooltip","CircularProgress","shouldDirty","shouldValidate","FormHelperText","multiline","rows","FormLabel","RadioGroup","Radio","UserSearch","users","setUsers","user","friendId","App","exact","path","render","purple","createBreakpoints","createMuiTheme","common","transparent","textTransform","fontFamily","h2","h3","h6","ReactDOM","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.bebf7aad.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport StorefrontIcon from \"@material-ui/icons/Storefront\";\r\nimport GroupWorkIcon from \"@material-ui/icons/GroupWork\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/cute.svg\";\r\nimport { ListItemIcon, ListItemText, Avatar } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.modal + 1,\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  toolbarMargin: { ...theme.mixins.toolbar },\r\n  logoButton: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  logo: {\r\n    height: \"2.75rem\",\r\n    marginRight: \".5rem\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"1.75rem\",\r\n    },\r\n  },\r\n  tabContainer: { marginLeft: \"auto\" },\r\n  tab: {\r\n    ...theme.typography.tab,\r\n    minWidth: 10,\r\n    marginLeft: \"25px\",\r\n  },\r\n  button: { marginLeft: \"25px\", borderRadius: \"3px\" },\r\n  menu: { borderRadius: \"3px\", ...theme.mixins.toolbar },\r\n  menuItem: {\r\n    ...theme.typography.tab,\r\n    opacity: 0.7,\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  icon: {\r\n    verticalAlign: \"middle\",\r\n  },\r\n  nestedDrawer: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  drawer: {\r\n    minWidth: \"75%\",\r\n    height: \"100%\",\r\n  },\r\n  drawerItem: {\r\n    ...theme.typography.tab,\r\n    opacity: 0.7,\r\n  },\r\n  activeDrawerItem: {\r\n    ...theme.typography.tab,\r\n    opacity: 1,\r\n  },\r\n  drawerItemEmphasised: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n  },\r\n  drawerItemPushBottom: {\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  burgerButton: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  nav: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  userNav: {\r\n    marginTop: \"5em\",\r\n  },\r\n  avatar: {\r\n    height: \"2em\",\r\n    width: \"2em\",\r\n    textDecoration: \"none\",\r\n    marginLeft: \"25px\",\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const {\r\n    tabValue,\r\n    setTabValue,\r\n    menuSelectedIndex,\r\n    setMenuSelectedIndex,\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\n  const menuOptions = [\r\n    { name: \"about us\", href: \"/aboutus\" },\r\n    { name: \"faqs\", href: \"/faqs\" },\r\n    { name: \"coming soon\", href: \"/comingsoon\" },\r\n    { name: \"support us\", href: \"/support\" },\r\n  ];\r\n\r\n  let routes = [];\r\n\r\n  if (!props.currentUser) {\r\n    routes = [\r\n      {\r\n        name: \"about\",\r\n        href: \"/aboutus\",\r\n        icon: <InfoIcon />,\r\n        ariaOwns: anchorEl ? \"about-menu\" : undefined,\r\n        ariaPopup: anchorEl ? true : undefined,\r\n        mouseOver: (e) => handleMenuClick(e),\r\n      },\r\n      { name: \"merch\", href: \"/merch\", icon: <StorefrontIcon /> },\r\n      { name: \"partners\", href: \"/partners\", icon: <GroupWorkIcon /> },\r\n\r\n      {\r\n        name: \"community standards\",\r\n        href: \"/communitystandards\",\r\n        icon: <ContactMailIcon />,\r\n      },\r\n    ];\r\n  } else {\r\n    routes = [\r\n      {\r\n        name: \"my groups\",\r\n        href: \"/mygroups\",\r\n        icon: <GroupIcon />,\r\n      },\r\n      {\r\n        name: \"find a group\",\r\n        href: \"/findgroups\",\r\n        icon: <SearchIcon />,\r\n      },\r\n      {\r\n        name: \"looking for more\",\r\n        href: \"/lfm\",\r\n        icon: <SearchIcon />,\r\n      },\r\n    ];\r\n  }\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (window.location.pathname === routes[i].href) {\r\n        setTabValue(i);\r\n      }\r\n    }\r\n  }, [setTabValue, tabValue, routes]);\r\n\r\n  const handleTabChange = (e, index) => {\r\n    setTabValue(index);\r\n  };\r\n\r\n  const handleMenuClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = (e) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  const handleMenuItemClick = (e, i) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n    setMenuSelectedIndex(i);\r\n  };\r\n\r\n  const tabs = (\r\n    <>\r\n      <Tabs\r\n        value={tabValue}\r\n        onChange={handleTabChange}\r\n        className={classes.tabContainer}\r\n      >\r\n        {routes.map((route) => (\r\n          <Tab\r\n            key={route.name}\r\n            className={classes.tab}\r\n            label={route.name}\r\n            component={Link}\r\n            to={route.href}\r\n            aria-owns={route.ariaOwns}\r\n            aria-haspopup={route.ariaPopup}\r\n            onMouseEnter={route.mouseOver}\r\n          />\r\n        ))}\r\n      </Tabs>\r\n      {props.currentUser ? (\r\n        <Avatar\r\n          src=\"Test\"\r\n          alt={props.currentUser.username}\r\n          className={classes.avatar}\r\n          component={Link}\r\n          to=\"/profile\"\r\n        />\r\n      ) : (\r\n        <>\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            variant=\"outlined\"\r\n            component={Link}\r\n            to=\"/login\"\r\n            onClick={() => {\r\n              setTabValue(false);\r\n              setMenuSelectedIndex(false);\r\n            }}\r\n          >\r\n            login\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            className={classes.button}\r\n            component={Link}\r\n            to=\"/register\"\r\n            onClick={() => {\r\n              setTabValue(false);\r\n              setMenuSelectedIndex(false);\r\n            }}\r\n          >\r\n            sign up\r\n          </Button>\r\n        </>\r\n      )}\r\n      <Menu\r\n        id=\"about-menu\"\r\n        anchorEl={anchorEl}\r\n        open={openMenu}\r\n        onClose={handleMenuClose}\r\n        MenuListProps={{\r\n          onMouseLeave: handleMenuClose,\r\n        }}\r\n        classes={{ paper: classes.menu }}\r\n        elevation={0}\r\n        keepMounted\r\n        style={{ zIndex: 1302 }}\r\n      >\r\n        {menuOptions.map((option, i) => (\r\n          <MenuItem\r\n            key={option.name}\r\n            onClick={(e) => {\r\n              handleMenuItemClick(e, i);\r\n              setTabValue(0);\r\n              handleMenuClose();\r\n            }}\r\n            classes={{ root: classes.menuItem }}\r\n            component={Link}\r\n            to={option.href}\r\n            selected={i === menuSelectedIndex && tabValue === 0}\r\n          >\r\n            {option.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </>\r\n  );\r\n\r\n  const drawer = (\r\n    <SwipeableDrawer\r\n      classes={{ root: classes.drawer, paper: classes.drawer }}\r\n      disableBackdropTransition={!iOS}\r\n      disableDiscovery={iOS}\r\n      anchor=\"left\"\r\n      open={drawerOpen}\r\n      onOpen={() => {\r\n        setDrawerOpen(true);\r\n      }}\r\n      onClose={() => setDrawerOpen(false)}\r\n    >\r\n      <div className={classes.toolbarMargin} />\r\n      <List component=\"nav\" className={classes.nav}>\r\n        {routes.map((route, i) => (\r\n          <ListItem\r\n            key={route.name}\r\n            divider\r\n            button\r\n            component={Link}\r\n            to={route.href}\r\n            selected={tabValue === i}\r\n            onClick={() => {\r\n              setOpenMenu(false);\r\n              setDrawerOpen(false);\r\n              setTabValue(i);\r\n              setMenuSelectedIndex(false);\r\n            }}\r\n            className={\r\n              tabValue === i ? classes.activeDrawerItem : classes.drawerItem\r\n            }\r\n          >\r\n            <ListItemIcon>{route.icon}</ListItemIcon>\r\n            <ListItemText disableTypography primary={route.name} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <List component=\"nav\" className={`${classes.nav} ${classes.userNav}`}>\r\n        {props.currentUser ? (\r\n          <>\r\n            <ListItem\r\n              divider\r\n              button\r\n              component={Link}\r\n              to=\"/profile\"\r\n              onClick={() => {\r\n                setTabValue(false);\r\n                setDrawerOpen(false);\r\n                setOpenMenu(false);\r\n              }}\r\n              className={`${classes.activeDrawerItem} ${classes.drawerItemEmphasised}`}\r\n            >\r\n              <ListItemIcon>\r\n                <Avatar src=\"Test\" alt={props.currentUser.username} />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                disableTypography\r\n                primary={props.currentUser.username}\r\n              />\r\n            </ListItem>\r\n            <ListItem\r\n              divider\r\n              button\r\n              onClick={() => {\r\n                setTabValue(false);\r\n                setDrawerOpen(false);\r\n                setOpenMenu(false);\r\n                localStorage.removeItem(\"jwt\");\r\n                props.setCurrentUser(null);\r\n              }}\r\n              className={classes.drawerItem}\r\n            >\r\n              <ListItemIcon>\r\n                <ListItemIcon>\r\n                  <ExitToAppIcon />\r\n                </ListItemIcon>\r\n              </ListItemIcon>\r\n              <ListItemText disableTypography primary=\"logout\" />\r\n            </ListItem>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <ListItem\r\n              divider\r\n              button\r\n              component={Link}\r\n              to=\"/login\"\r\n              onClick={() => {\r\n                setTabValue(false);\r\n                setDrawerOpen(false);\r\n                setOpenMenu(false);\r\n              }}\r\n              className={`${classes.activeDrawerItem}`}\r\n            >\r\n              <ListItemIcon>\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n              <ListItemText disableTypography primary=\"login\" />\r\n            </ListItem>\r\n            <ListItem\r\n              divider\r\n              button\r\n              component={Link}\r\n              to=\"/register\"\r\n              onClick={() => {\r\n                setTabValue(false);\r\n                setDrawerOpen(false);\r\n                setOpenMenu(false);\r\n              }}\r\n              className={`${classes.activeDrawerItem} ${classes.drawerItemEmphasised}`}\r\n            >\r\n              <ListItemIcon>\r\n                <ExitToAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText disableTypography primary=\"sign up\" />\r\n            </ListItem>\r\n          </>\r\n        )}\r\n      </List>\r\n    </SwipeableDrawer>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ElevationScroll {...props}>\r\n        <AppBar position=\"fixed\" color=\"transparent\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Button\r\n              component={Link}\r\n              to=\"/\"\r\n              onClick={() => setTabValue(false)}\r\n              disableRipple\r\n              className={classes.logoButton}\r\n            >\r\n              <img src={logo} alt=\"company logo\" className={classes.logo} />\r\n              <Typography variant=\"h6\" component=\"h1\">\r\n                <Typography variant=\"h6\" component=\"span\" color=\"primary\">\r\n                  lfg.\r\n                </Typography>\r\n                games\r\n              </Typography>\r\n            </Button>\r\n            {matches && (\r\n              <IconButton\r\n                onClick={() => setDrawerOpen(!drawerOpen)}\r\n                disableRipple\r\n                className={classes.burgerButton}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            )}\r\n            {matches ? drawer : tabs}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <div className={classes.toolbarMargin} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","module.exports = __webpack_public_path__ + \"static/media/crown.c68a34ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/wand.888791b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/sword.7584b356.svg\";","module.exports = __webpack_public_path__ + \"static/media/knife.36ba6675.svg\";","module.exports = __webpack_public_path__ + \"static/media/lfggames.70b7aa67.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport RedditIcon from \"@material-ui/icons/Reddit\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    borderTop: `1px solid ${theme.palette.text.primary}`,\r\n    width: \"100%\",\r\n  },\r\n  mainContainer: {},\r\n  link: {\r\n    ...theme.typography.tab,\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n  },\r\n  gridItem: {\r\n    margin: \"3em\",\r\n  },\r\n  social: {\r\n    height: \"1em\",\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: \"1.5em\",\r\n      width: \"1.5em\",\r\n    },\r\n  },\r\n  socialContainer: {\r\n    marginTop: \"1em\",\r\n  },\r\n}));\r\n\r\nconst Footer = (props) => {\r\n  const { setTabValue } = props;\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Hidden smDown>\r\n        <Grid container justify=\"center\" className={classes.mainContainer}>\r\n          <Grid item className={classes.gridItem}>\r\n            <Grid container direction=\"column\" spacing={2}>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"aboutus\"\r\n                onClick={() => {\r\n                  setTabValue(0);\r\n                }}\r\n                className={classes.link}\r\n              >\r\n                about us\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"support\"\r\n                onClick={() => {\r\n                  setTabValue(0);\r\n                }}\r\n                className={classes.link}\r\n              >\r\n                support us\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"contact\"\r\n                onClick={() => {\r\n                  setTabValue(0);\r\n                }}\r\n                className={classes.link}\r\n              >\r\n                contact us\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item className={classes.gridItem}>\r\n            <Grid container direction=\"column\" spacing={2}>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"merch\"\r\n                onClick={() => {\r\n                  setTabValue(1);\r\n                }}\r\n                className={classes.link}\r\n              >\r\n                merch\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item className={classes.gridItem}>\r\n            <Grid container direction=\"column\" spacing={2}>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"partners\"\r\n                onClick={() => {\r\n                  setTabValue(2);\r\n                }}\r\n                className={classes.link}\r\n              >\r\n                partners\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item className={classes.gridItem}>\r\n            <Grid container direction=\"column\" spacing={2}>\r\n              <Grid item component={Link} to=\"careers\" className={classes.link}>\r\n                careers\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item className={classes.gridItem}>\r\n            <Grid container direction=\"column\" spacing={2}>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"privacypolicy\"\r\n                className={classes.link}\r\n              >\r\n                privacy policy\r\n              </Grid>\r\n              <Grid item component={Link} to=\"terms\" className={classes.link}>\r\n                terms and conditions\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"communitystandards\"\r\n                className={classes.link}\r\n              >\r\n                community standards\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.socialContainer}\r\n      >\r\n        <Grid\r\n          item\r\n          component={\"a\"}\r\n          href=\"https://www.facebook.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <FacebookIcon className={classes.social} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={\"a\"}\r\n          href=\"https://www.twitter.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <TwitterIcon className={classes.social} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={\"a\"}\r\n          href=\"https://www.reddit.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <RedditIcon className={classes.social} />\r\n        </Grid>\r\n      </Grid>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport crown from \"../../assets/crown.svg\";\r\nimport cute from \"../../assets/cute.svg\";\r\nimport wand from \"../../assets/wand.svg\";\r\nimport sword from \"../../assets/sword.svg\";\r\nimport knife from \"../../assets/knife.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContainer: {\r\n    height: \"100vh\",\r\n  },\r\n  heroContent: {\r\n    [theme.breakpoints.up(\"md\")]: { transform: \"translateY(-50%)\" },\r\n  },\r\n  ctaButtons: {\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  heroIcon: {\r\n    height: \"2em\",\r\n    width: \"2em\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: \"2.75em\",\r\n      width: \"2.75em\",\r\n    },\r\n  },\r\n  groupAvatar: {\r\n    width: \"3.5em\",\r\n    marginLeft: \"30px\",\r\n  },\r\n  moreInfoGrid: {\r\n    marginTop: \"8em\",\r\n  },\r\n  imageGrid: {\r\n    margin: \"0 2em\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst LandingPage = ({ currentUser }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.heroContainer}\r\n      >\r\n        <Grid item className={classes.heroContent}>\r\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\r\n            <Grid item>\r\n              <img src={wand} alt=\"logo\" className={classes.heroIcon} />\r\n            </Grid>\r\n            <Grid item>\r\n              <img src={sword} alt=\"logo\" className={classes.heroIcon} />\r\n            </Grid>\r\n            <Grid item>\r\n              <img src={crown} alt=\"logo\" className={classes.heroIcon} />\r\n            </Grid>\r\n            <Grid item>\r\n              <img src={cute} alt=\"logo\" className={classes.heroIcon} />\r\n            </Grid>\r\n            <Grid item>\r\n              <img src={knife} alt=\"logo\" className={classes.heroIcon} />\r\n            </Grid>\r\n          </Grid>\r\n          <Typography variant=\"h2\" align=\"center\">\r\n            <Typography variant=\"h2\" component=\"span\" color=\"primary\">\r\n              lfg\r\n            </Typography>{\" \"}\r\n            for the tabletop.\r\n          </Typography>\r\n\r\n          <Typography variant=\"body1\" align=\"center\">\r\n            gather your party and venture forth.\r\n          </Typography>\r\n\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            className={classes.ctaButtons}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                component={Link}\r\n                to={currentUser ? \"/findgroups\" : \"/register\"}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                join an adventure\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl =\r\n  process.env.NODE_ENV !== \"production\"\r\n    ? \"https://localhost:5001/api\"\r\n    : \"https://lfg.games/api\";\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: baseUrl,\r\n});\r\n\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (token) {\r\n      config.headers.Authorization = \"Bearer \" + token;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default apiClient;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\n\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport throttle from \"lodash/throttle\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n/*Todo:: All google autocomplete code is taken from Material Labs documentation and could use a tidy up */\r\n\r\nfunction loadScript(src, position, id) {\r\n  if (!position) {\r\n    return;\r\n  }\r\n\r\n  const script = document.createElement(\"script\");\r\n  script.setAttribute(\"async\", \"\");\r\n  script.setAttribute(\"id\", id);\r\n  script.src = src;\r\n  position.appendChild(script);\r\n}\r\n\r\nconst googleAutoCompleteService = { current: null };\r\n\r\nconst GooglePlacesLocationSearch = ({\r\n  register,\r\n  setValue,\r\n  classes,\r\n  errors,\r\n}) => {\r\n  const loaded = React.useRef(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [locationValue, setLocationValue] = React.useState(null);\r\n  const [locationInputValue, setLocationInputValue] = React.useState(\"\");\r\n\r\n  if (typeof window !== \"undefined\" && !loaded.current) {\r\n    if (!document.querySelector(\"#google-maps\")) {\r\n      loadScript(\r\n        `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_PLACES_API_KEY}&libraries=places`,\r\n        document.querySelector(\"head\"),\r\n        \"google-maps\"\r\n      );\r\n    }\r\n\r\n    loaded.current = true;\r\n  }\r\n\r\n  const fetch = useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        googleAutoCompleteService.current.getPlacePredictions(\r\n          request,\r\n          callback\r\n        );\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    register(\"googleplaceid\");\r\n    let active = true;\r\n\r\n    if (!googleAutoCompleteService.current && window.google) {\r\n      googleAutoCompleteService.current = new window.google.maps.places.AutocompleteService();\r\n    }\r\n    if (!googleAutoCompleteService.current) {\r\n      return undefined;\r\n    }\r\n\r\n    if (locationInputValue === \"\") {\r\n      setOptions(locationValue ? [locationValue] : []);\r\n      return undefined;\r\n    }\r\n\r\n    fetch({ input: locationInputValue }, (results) => {\r\n      if (active) {\r\n        let newOptions = [];\r\n\r\n        if (locationValue) {\r\n          newOptions = [locationValue];\r\n        }\r\n\r\n        if (results) {\r\n          newOptions = [...newOptions, ...results];\r\n        }\r\n\r\n        setOptions(newOptions);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [locationValue, locationInputValue, fetch, register]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      filterOptions={(x) => x}\r\n      options={options}\r\n      noOptionsText=\"start typing a location to see your options\"\r\n      getOptionLabel={(option) =>\r\n        typeof option === \"string\" ? option : option.description\r\n      }\r\n      size=\"small\"\r\n      autoComplete\r\n      includeInputInList\r\n      filterSelectedOptions\r\n      name=\"googleplaceid\"\r\n      onChange={(event, newValue) => {\r\n        setOptions(newValue ? [newValue, ...options] : options);\r\n        setLocationValue(newValue);\r\n        setValue(\"googleplaceid\", newValue ? newValue.place_id : null);\r\n      }}\r\n      onInputChange={(event, newInputValue) => {\r\n        setLocationInputValue(newInputValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          className={classes.formInput}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"location\"\r\n          error={Boolean(errors.googleplaceid)}\r\n          helperText={\r\n            errors.googleplaceid\r\n              ? errors.googleplaceid.message\r\n              : \"we use your location to group you with nearby players, be as specific as you like but we recommend city/town level as a minimum\"\r\n          }\r\n        />\r\n      )}\r\n      renderOption={(option) => {\r\n        const matches =\r\n          option.structured_formatting.main_text_matched_substrings;\r\n        const parts = parse(\r\n          option.structured_formatting.main_text,\r\n          matches.map((match) => [match.offset, match.offset + match.length])\r\n        );\r\n\r\n        return (\r\n          <Grid container alignItems=\"center\">\r\n            <Grid item>\r\n              <LocationOnIcon className={classes.icon} />\r\n            </Grid>\r\n            <Grid item xs>\r\n              {parts.map((part, index) => (\r\n                <span\r\n                  key={index}\r\n                  style={{ fontWeight: part.highlight ? 700 : 400 }}\r\n                >\r\n                  {part.text}\r\n                </span>\r\n              ))}\r\n\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                {option.structured_formatting.secondary_text}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GooglePlacesLocationSearch;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"../../ApiClient\";\r\nimport GooglePlacesLocationSearch from \"../Global/GooglePlacesLocationSearch\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  logo: {\r\n    maxWidth: \"3em\",\r\n    margin: \"2em 0em\",\r\n  },\r\n  formInput: {\r\n    margin: \"1em 0\",\r\n  },\r\n  button: {\r\n    margin: \"2em 0\",\r\n  },\r\n  labelColour: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  checkboxLabel: {\r\n    marginTop: \"1em\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  googleplaceid: yup.string().required(\"location is required\"),\r\n  username: yup.string().required(\"username required\"),\r\n  emailaddress: yup.string().email(\"invalid email\").required(\"invalid email\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"password required\")\r\n    .min(6, \"password must be a minimum of 6 characters\")\r\n    .matches(\r\n      /* eslint-disable no-useless-escape */\r\n      /^.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?].*$/,\r\n      \"password must contain a special character\"\r\n    ),\r\n  dateofbirth: yup\r\n    .string()\r\n    .nullable()\r\n    .required(\"date of birth is required\")\r\n    .test(\r\n      \"\",\r\n      `we aren't currently accepting registrations from children under 13`,\r\n      function (value) {\r\n        return moment().diff(moment(value), \"years\") >= 13;\r\n      }\r\n    ),\r\n  inperson: yup.bool(),\r\n  online: yup.bool().when(\"inperson\", {\r\n    is: false,\r\n    then: yup.bool().oneOf([true], \"you must play either online or in person\"),\r\n  }),\r\n  termsandconditions: yup.bool().oneOf([true], \"you must agree to this\"),\r\n});\r\n\r\nconst RegistrationForm = ({ setCurrentUser }) => {\r\n  const classes = useStyle();\r\n  const {\r\n    control,\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    setValue,\r\n    setError,\r\n    formState,\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    mode: \"onTouched\",\r\n    criteriaMode: \"all\",\r\n  });\r\n\r\n  const onSubmit = (data, errors) => {\r\n    data.dateofbirth = moment(data.dateofbirth).format(\"YYYY-MM-DD\");\r\n    axios\r\n      .post(\"auth\", data)\r\n      .then((response) => {\r\n        localStorage.setItem(\"jwt\", response.data);\r\n        setCurrentUser(true);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data.serverError) {\r\n          setError(\"form\", {\r\n            type: \"manual\",\r\n            message: error.response.data.serverError,\r\n          });\r\n        } else if (error.response.data.errors) {\r\n          for (let validationError in error.response.data.errors) {\r\n            //TODO:: I can only work out a way to display one error at a time right now on the client validation so matching this from a server side pespective\r\n            setError(validationError.toLowerCase(), {\r\n              type: \"manual\",\r\n              message: error.response.data.errors[validationError][0],\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid item>\r\n          <TextField\r\n            size=\"small\"\r\n            fullWidth\r\n            className={classes.formInput}\r\n            variant=\"outlined\"\r\n            name=\"username\"\r\n            label=\"username\"\r\n            inputRef={register}\r\n            error={Boolean(errors.username)}\r\n            helperText={errors.username && errors.username.message}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            size=\"small\"\r\n            fullWidth\r\n            className={classes.formInput}\r\n            variant=\"outlined\"\r\n            name=\"emailaddress\"\r\n            label=\"email address\"\r\n            inputRef={register}\r\n            error={Boolean(errors.emailaddress)}\r\n            helperText={errors.emailaddress && errors.emailaddress.message}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            size=\"small\"\r\n            className={classes.formInput}\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            label=\"password\"\r\n            fullWidth\r\n            inputRef={register}\r\n            type=\"password\"\r\n            error={Boolean(errors.password)}\r\n            helperText={errors.password && errors.password.message}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n            <Controller\r\n              size=\"small\"\r\n              initialFocusedDate={null}\r\n              defaultValue={null}\r\n              control={control}\r\n              as={KeyboardDatePicker}\r\n              className={classes.formInput}\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              openTo=\"year\"\r\n              name=\"dateofbirth\"\r\n              label=\"date of birth\"\r\n              fullWidth\r\n              format={\"YYYY-MM-DD\"}\r\n              maxDate={moment().add(-13, \"years\")}\r\n              disableFuture\r\n              placeholder={null}\r\n              inputRef={register}\r\n              error={Boolean(errors.dateofbirth)}\r\n              helperText={errors.dateofbirth && errors.dateofbirth.message}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={`${classes.labelColour} ${classes.checkboxLabel}`}\r\n          >\r\n            how do you want to play?\r\n          </Typography>\r\n          <FormControlLabel\r\n            className={classes.labelColour}\r\n            control={\r\n              <Checkbox name=\"online\" inputRef={register} color=\"primary\" />\r\n            }\r\n            label=\"online\"\r\n          />\r\n          <FormControlLabel\r\n            className={classes.labelColour}\r\n            control={<Checkbox name=\"inperson\" inputRef={register} />}\r\n            label=\"in person\"\r\n          />\r\n          {errors.online && (\r\n            <Typography variant=\"body2\" className={classes.error}>\r\n              {errors.online.message}\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n        <Grid item>\r\n          <GooglePlacesLocationSearch\r\n            register={register}\r\n            errors={errors}\r\n            classes={classes}\r\n            setValue={setValue}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <FormControlLabel\r\n            className={classes.labelColour}\r\n            control={<Checkbox name=\"termsandconditions\" inputRef={register} />}\r\n            label=\"i agree to the community standards, privacy policy and terms and conditions\"\r\n          />\r\n          <Typography variant=\"body2\" className={classes.error}>\r\n            {errors.termsandconditions && errors.termsandconditions.message}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"body2\" className={classes.error}>\r\n            {errors.form && errors.form.message}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item container spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"body2\"\r\n              to=\"/login\"\r\n              component={Link}\r\n              className={classes.link}\r\n              color=\"primary\"\r\n            >\r\n              log in instead\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              disabled={formState.isSubmitting || !formState.isDirty}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              type=\"submit\"\r\n            >\r\n              register\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport logo from \"../../assets/cute.svg\";\r\nimport RegistrationForm from \"../Features/RegistrationForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  title: {\r\n    marginBottom: \"1em\",\r\n  },\r\n  container: {\r\n    minHeight: \"90vh\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(4),\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  logo: {\r\n    height: \"2.75rem\",\r\n    marginRight: \".5rem\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      height: \"1.75rem\",\r\n    },\r\n  },\r\n  formContainer: {\r\n    margin: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst RegisterPage = ({ setCurrentUser, currentUser }) => {\r\n  const classes = useStyle();\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const innerContent = (\r\n    <>\r\n      <Grid item>\r\n        <Hidden mdDown>\r\n          <img src={logo} alt=\"company logo\" className={classes.logo} />\r\n        </Hidden>\r\n        <Typography variant=\"h6\" component=\"h1\">\r\n          <Typography variant=\"h6\" component=\"span\" color=\"primary\">\r\n            lfg.\r\n          </Typography>\r\n          games\r\n        </Typography>\r\n        <Typography variant=\"body1\">create your account</Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <RegistrationForm setCurrentUser={setCurrentUser} />\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Container fixed maxWidth=\"md\">\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        className={classes.container}\r\n      >\r\n        {innerContent}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\n\r\nimport logo from \"../../assets/cute.svg\";\r\nimport ApiClient from \"../../ApiClient\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  logo: {\r\n    height: \"2.75rem\",\r\n    marginRight: \".5rem\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      height: \"1.75rem\",\r\n    },\r\n  },\r\n  container: {\r\n    height: \"90vh\",\r\n  },\r\n  formInput: {\r\n    margin: \"1em 0\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup.string().required(\"username required\"),\r\n  password: yup.string().required(\"password required\"),\r\n});\r\n\r\nconst LoginPage = ({ setCurrentUser, currentUser }) => {\r\n  const classes = useStyle();\r\n\r\n  const { register, handleSubmit, errors, formState, setError } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    mode: \"onTouched\",\r\n    criteriaMode: \"all\",\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    ApiClient.post(\"/auth/login\", data)\r\n      .then((response) => {\r\n        localStorage.setItem(\"jwt\", response.data);\r\n        setCurrentUser(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError(\"form\", {\r\n          type: \"manual\",\r\n          message: error.response.data.serverError,\r\n        });\r\n      });\r\n  };\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container fixed maxWidth=\"sm\">\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        className={classes.container}\r\n      >\r\n        <Grid item>\r\n          <Hidden smDown>\r\n            <img src={logo} alt=\"company logo\" className={classes.logo} />\r\n          </Hidden>\r\n          <Typography variant=\"h6\" component=\"h1\">\r\n            <Typography variant=\"h6\" component=\"span\" color=\"primary\">\r\n              lfg.\r\n            </Typography>\r\n            games\r\n          </Typography>\r\n          <Typography variant=\"body1\">login</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"username\"\r\n                name=\"username\"\r\n                inputRef={register}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                className={classes.formInput}\r\n                size=\"small\"\r\n                helperText={errors.username && errors.username.message}\r\n                error={Boolean(errors.username)}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"password\"\r\n                name=\"password\"\r\n                inputRef={register}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                className={classes.formInput}\r\n                size=\"small\"\r\n                type=\"password\"\r\n                helperText={errors.password && errors.password.message}\r\n                error={Boolean(errors.password)}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body2\" className={classes.error}>\r\n                {errors.form && errors.form.message}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item container spacing={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  to=\"/register\"\r\n                  component={Link}\r\n                  className={classes.link}\r\n                  color=\"primary\"\r\n                >\r\n                  register instead\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={formState.isSubmitting || !formState.isDirty}\r\n                >\r\n                  login\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent,\r\n  Button,\r\n  CardActions,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport apiClient from \"../../ApiClient\";\r\nimport banner from \"../../assets/lfggames.png\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  noGroupContainer: {\r\n    minHeight: \"100vh\",\r\n    textAlign: \"center\",\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    minWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  cardContent: {\r\n    minHeight: \"150px\",\r\n    maxHeight: \"150px\",\r\n    overflow: \"hidden\",\r\n  },\r\n  subtitle1: {\r\n    fontSize: \"1em\",\r\n  },\r\n  footerMargin: {\r\n    margin: \"2em 0em\",\r\n  },\r\n}));\r\n\r\nconst MyGroups = () => {\r\n  const classes = useStyle();\r\n  const [groups, setGroups] = useState([]);\r\n\r\n  useEffect(() => {\r\n    apiClient.get(\"/user/groups\").then((response) => setGroups(response.data));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {groups && groups.length === 0 ? (\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          className={classes.noGroupContainer}\r\n        >\r\n          <Typography variant=\"body1\">\r\n            looks like you don't have any groups yet :( <br />\r\n            <Link to=\"/creategroup\" className={classes.link}>\r\n              create a private one now\r\n            </Link>{\" \"}\r\n            or{\" \"}\r\n            <Link to=\"/findgroups\" className={classes.link}>\r\n              use the matchmaker\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      ) : (\r\n        <Container maxWidth={\"lg\"}>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Typography variant=\"h2\" gutterBottom>\r\n              my groups\r\n            </Typography>\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n              {groups.map((group) => (\r\n                <Grid item key={group.groupName}>\r\n                  <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        image={banner}\r\n                        title={group.groupName}\r\n                        className={classes.media}\r\n                      />\r\n                      <CardContent className={classes.cardContent}>\r\n                        <Typography variant=\"h5\" component=\"h3\">\r\n                          {group.groupName}\r\n                        </Typography>\r\n                        <Typography\r\n                          gutterBottom\r\n                          variant=\"subtitle1\"\r\n                          color=\"primary\"\r\n                          className={classes.subtitle1}\r\n                        >\r\n                          {group.memberIds.length}{\" \"}\r\n                          {group.memberIds.length === 1 ? \"member\" : \"members\"}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                          component=\"p\"\r\n                        >\r\n                          {group.description}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        invite more players\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        view group\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n            <Typography\r\n              variant=\"body1\"\r\n              align=\"center\"\r\n              className={classes.footerMargin}\r\n            >\r\n              looking for a new adventure? <br />\r\n              <Link to=\"/creategroup\" className={classes.link}>\r\n                create a new private group\r\n              </Link>{\" \"}\r\n              or{\" \"}\r\n              <Link to=\"/findgroups\" className={classes.link}>\r\n                use the matchmaker\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyGroups;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Grid,\r\n  makeStyles,\r\n  OutlinedInput,\r\n  InputLabel,\r\n  FormControl,\r\n  Container,\r\n  Tooltip,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Typography,\r\n  Button,\r\n  FormHelperText,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport CasinoOutlinedIcon from \"@material-ui/icons/CasinoOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as yup from \"yup\";\r\nimport apiClient from \"../../ApiClient\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    minHeight: \"100vh\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n  },\r\n  subtitle: {\r\n    marginLeft: \".5em\",\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  groupname: yup\r\n    .string()\r\n    .required(\r\n      \"group name is required, can't think of one? hit the random button\"\r\n    )\r\n    .min(\r\n      5,\r\n      \"group names must be a minimum of 5 characters, can't think of one? hit the random button\"\r\n    ),\r\n\r\n  description: yup\r\n    .string()\r\n    .required(\"description is required\")\r\n    .min(\r\n      10,\r\n      \"descriptions should be a minimum of 10 characters, describe what your group is\"\r\n    ),\r\n});\r\n\r\nconst CreateGroup = () => {\r\n  const classes = useStyle();\r\n  const [loadingRandom, setLoadingRandom] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    control,\r\n    setValue,\r\n    getValues,\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    mode: \"onTouched\",\r\n    criteriaMode: \"all\",\r\n    defaultValues: { privacyLevel: \"private\" },\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    apiClient\r\n      .post(\"/groups\", data)\r\n      .then((response) => console.log(response.data));\r\n  };\r\n\r\n  const getRandomName = () => {\r\n    setLoadingRandom(true);\r\n    apiClient.get(\"/groups/randomname\").then((response) => {\r\n      setValue(\"groupname\", response.data, {\r\n        shouldDirty: true,\r\n        shouldValidate: true,\r\n      });\r\n      setLoadingRandom(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth={\"md\"}>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        className={classes.container}\r\n      >\r\n        <Grid container item>\r\n          <Grid item>\r\n            <Typography variant=\"h2\">create a private group</Typography>\r\n            <Typography variant=\"subtitle1\" className={classes.subtitle}>\r\n              public games can be accessed via the{\" \"}\r\n              <Link to=\"/matchmaker\" className={classes.link}>\r\n                matchmaker\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid item>\r\n              <FormControl\r\n                fullWidth\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                className={classes.margin}\r\n              >\r\n                <InputLabel\r\n                  shrink={Boolean(getValues(\"groupname\"))}\r\n                  error={Boolean(errors.groupname)}\r\n                >\r\n                  group name\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  notched={Boolean(getValues(\"groupname\"))}\r\n                  label=\"group name\"\r\n                  name=\"groupname\"\r\n                  inputRef={register}\r\n                  error={Boolean(errors.groupname)}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton>\r\n                        <Tooltip title=\"random\">\r\n                          {loadingRandom ? (\r\n                            <CircularProgress color=\"primary\" size={20} />\r\n                          ) : (\r\n                            <CasinoOutlinedIcon onClick={getRandomName} />\r\n                          )}\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                ></OutlinedInput>\r\n                <FormHelperText error={Boolean(errors.groupname)}>\r\n                  {errors.groupname && errors.groupname.message}\r\n                </FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"description\"\r\n                size=\"small\"\r\n                label=\"description\"\r\n                inputRef={register}\r\n                multiline={true}\r\n                rows=\"10\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                className={classes.margin}\r\n                error={Boolean(errors.description)}\r\n                helperText={errors.description && errors.description.message}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl component=\"fieldset\" className={classes.margin}>\r\n                <FormLabel>privacy level</FormLabel>\r\n                <Controller\r\n                  as={\r\n                    <RadioGroup>\r\n                      <FormControlLabel\r\n                        value=\"private\"\r\n                        control={<Radio />}\r\n                        label=\"private - no one can join unless explicitly invited by the groups leader\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"friends\"\r\n                        control={<Radio />}\r\n                        label=\"friends only - friends of the group creator can join, anyone else will need an invite\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"groupfriends\"\r\n                        control={<Radio />}\r\n                        label=\"group friends - friends of any existing group member can join, anyone else will need an invite\"\r\n                      />\r\n                    </RadioGroup>\r\n                  }\r\n                  control={control}\r\n                  name=\"privacyLevel\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              create group\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateGroup;\r\n","import { Button, Container, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport apiClient from \"../../ApiClient\";\r\n\r\nconst UserSearch = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    apiClient.get(\"/users\").then((response) => setUsers(response.data));\r\n  }, []);\r\n\r\n  const toggleFriend = (id) => {\r\n    apiClient.post(\"/user/friends\", { friendId: id });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth={\"lg\"}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Typography variant=\"h2\" gutterBottom>\r\n          Looking for More\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        {users.map((user) => (\r\n          <Grid\r\n            key={user.id}\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            {user.username}\r\n            <Button onClick={() => toggleFriend(user.id)}>Add Friend</Button>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserSearch;\r\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./ui/Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Footer from \"./ui/Footer\";\nimport LandingPage from \"./Pages/LandingPage\";\nimport RegisterPage from \"./Pages/RegisterPage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport ApiClient from \"../ApiClient\";\nimport MyGroups from \"./Pages/MyGroups\";\nimport CreateGroup from \"./Pages/CreateGroup\";\nimport UserSearch from \"./Pages/UserSearch\";\n\nfunction App() {\n  const [menuSelectedIndex, setMenuSelectedIndex] = useState(0);\n  const [tabValue, setTabValue] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    if (!currentUser || currentUser === true) {\n      if (localStorage.getItem(\"jwt\")) {\n        ApiClient.get(\"/auth\")\n          .then((response) => setCurrentUser(response.data))\n          .catch((error) => localStorage.removeItem(\"jwt\"));\n      }\n    }\n  }, [currentUser]);\n\n  return (\n    <>\n      <Header\n        tabValue={tabValue}\n        setTabValue={setTabValue}\n        menuSelectedIndex={menuSelectedIndex}\n        setMenuSelectedIndex={setMenuSelectedIndex}\n        currentUser={currentUser}\n        setCurrentUser={setCurrentUser}\n      />\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <LandingPage {...props} currentUser={currentUser} />\n          )}\n        ></Route>\n        <Route exact path=\"/mygroups\" component={MyGroups}></Route>\n        <Route exact path=\"/creategroup\" component={CreateGroup} />\n        <Route\n          exact\n          path=\"/aboutus\"\n          component={() => <div>About Us</div>}\n        ></Route>\n        <Route\n          exact\n          path=\"/comingsoon\"\n          component={() => <div>Coming Soon</div>}\n        ></Route>\n        <Route exact path=\"/faqs\" component={() => <div>FAQs</div>}></Route>\n        <Route exact path=\"/merch\" component={() => <div>Merch</div>}></Route>\n        <Route\n          exact\n          path=\"/partners\"\n          component={() => <div>Partners</div>}\n        ></Route>\n        <Route\n          exact\n          path=\"/support\"\n          component={() => <div>Support</div>}\n        ></Route>\n        <Route\n          exact\n          path=\"/contact\"\n          component={() => <div>Contact</div>}\n        ></Route>\n        <Route\n          exact\n          path=\"/communitystandards\"\n          component={() => <div>Community Standards</div>}\n        ></Route>\n        <Route\n          exact\n          path=\"/login\"\n          render={(props) => (\n            <LoginPage\n              {...props}\n              setCurrentUser={setCurrentUser}\n              currentUser={currentUser}\n            />\n          )}\n        ></Route>\n        <Route exact path=\"/lfm\" component={UserSearch}></Route>\n        <Route\n          exact\n          path=\"/register\"\n          render={(props) => (\n            <RegisterPage\n              {...props}\n              setCurrentUser={setCurrentUser}\n              currentUser={currentUser}\n            />\n          )}\n        ></Route>\n      </Switch>\n      <Footer\n        tabValue={tabValue}\n        setTabValue={setTabValue}\n        menuSelectedIndex={menuSelectedIndex}\n        setMenuSelectedIndex={setMenuSelectedIndex}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport createBreakpoints from \"@material-ui/core/styles/createBreakpoints\";\r\n\r\nconst purple = \"rgb(207,146,255)\";\r\nconst breakpoints = createBreakpoints({});\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    common: {\r\n      purple: `${purple}`,\r\n      transparent: \"rgba(0,0,0,0)\",\r\n    },\r\n    type: \"dark\",\r\n    primary: {\r\n      main: `${purple}`,\r\n    },\r\n    secondary: {\r\n      main: `${purple}`,\r\n    },\r\n  },\r\n  typography: {\r\n    button: {\r\n      textTransform: \"lowercase\",\r\n      fontFamily: \"'Raleway', sans-serif;\",\r\n      fontWeight: 600,\r\n    },\r\n    tab: {\r\n      textTransform: \"lowercase\",\r\n      fontFamily: \"'Raleway', sans-serif;\",\r\n      fontWeight: 600,\r\n    },\r\n    h2: {\r\n      fontFamily: \"'Raleway', 'sans-serif'\",\r\n    },\r\n    h3: {\r\n      fontFamily: \"'Raleway', 'sans-serif'\",\r\n      color: `${purple}`,\r\n    },\r\n    h6: {\r\n      fontWeight: 400,\r\n      [breakpoints.down(\"xs\")]: {\r\n        fontSize: \"1rem\",\r\n      },\r\n    },\r\n    fontSize: 14,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./components/ui/Theme\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Router>\n      <App />\n    </Router>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/cute.2005b7d8.svg\";"],"sourceRoot":""}