{"version":3,"sources":["components/ui/Header.js","assets/crown.svg","assets/wand.svg","assets/sword.svg","assets/knife.svg","assets/lfggames.png","components/ui/Footer.js","components/Pages/LandingPage.js","ApiClient.js","components/Global/GooglePlacesLocationSearch.js","components/Features/RegistrationForm.js","components/Pages/RegisterPage.js","components/Pages/LoginPage.js","components/Pages/MyGroups.js","components/Pages/CreateGroup.js","components/Pages/UserSearch.js","components/Pages/LFG.js","components/App.js","components/ui/Theme.js","index.js","assets/cute.svg"],"names":["ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","elevation","useStyles","makeStyles","theme","appBar","zIndex","modal","backgroundColor","palette","background","default","toolbarMargin","mixins","toolbar","logoButton","logoText","textTransform","logo","height","marginRight","breakpoints","down","tabContainer","marginLeft","tab","typography","minWidth","button","borderRadius","menu","menuItem","opacity","icon","verticalAlign","nestedDrawer","paddingLeft","spacing","drawer","drawerItem","activeDrawerItem","drawerItemEmphasised","primary","main","light","drawerItemPushBottom","alignSelf","burgerButton","nav","display","flexDirection","justifyContent","userNav","marginTop","avatar","width","textDecoration","Header","tabValue","setTabValue","menuSelectedIndex","setMenuSelectedIndex","classes","useTheme","matches","useMediaQuery","useState","anchorEl","setAnchorEl","openMenu","setOpenMenu","drawerOpen","setDrawerOpen","iOS","process","browser","test","navigator","userAgent","routes","currentUser","name","href","ariaOwns","undefined","ariaPopup","mouseOver","e","handleMenuClick","useEffect","i","length","window","location","pathname","currentTarget","handleMenuClose","tabs","value","onChange","index","className","map","route","key","label","component","Link","to","aria-owns","aria-haspopup","onMouseEnter","src","alt","username","color","variant","onClick","id","open","onClose","MenuListProps","onMouseLeave","paper","keepMounted","style","option","handleMenuItemClick","root","selected","disableBackdropTransition","disableDiscovery","anchor","onOpen","divider","disableTypography","localStorage","removeItem","setCurrentUser","position","disableRipple","module","exports","footer","borderTop","text","mainContainer","link","gridItem","margin","social","up","socialContainer","Footer","Hidden","smDown","Grid","container","justify","item","direction","alignItems","target","rel","heroContainer","heroContent","transform","ctaButtons","paddingTop","subtitle","fontSize","heroIcon","groupAvatar","moreInfoGrid","imageGrid","LandingPage","wand","sword","crown","cute","knife","Typography","align","Button","apiClient","axios","create","baseURL","interceptors","request","use","config","token","getItem","headers","Authorization","error","console","log","Promise","reject","useStyle","maxWidth","formInput","labelColour","secondary","checkboxLabel","validationSchema","yup","shape","googleplaceid","required","emailaddress","email","password","min","dateofbirth","nullable","moment","diff","inperson","online","when","is","then","oneOf","termsandconditions","RegistrationForm","useForm","resolver","yupResolver","mode","criteriaMode","control","register","handleSubmit","errors","setError","setValue","formState","xs","onSubmit","data","format","post","response","setItem","catch","serverError","type","message","validationError","toLowerCase","TextField","size","fullWidth","inputRef","Boolean","helperText","libInstance","utils","MomentUtils","initialFocusedDate","defaultValue","as","KeyboardDatePicker","inputVariant","openTo","maxDate","add","disableFuture","placeholder","FormControlLabel","Checkbox","form","disabled","isSubmitting","isDirty","title","marginBottom","minHeight","padding","header","formContainer","RegisterPage","innerContent","Paper","square","Container","fixed","LoginPage","ApiClient","noGroupContainer","textAlign","media","cardContent","maxHeight","overflow","subtitle1","footerMargin","MyGroups","groups","setGroups","get","gutterBottom","group","groupName","Card","CardActionArea","CardMedia","image","banner","CardContent","memberIds","description","CardActions","groupname","CreateGroup","loadingRandom","setLoadingRandom","defaultValues","privacyLevel","getValues","FormControl","InputLabel","shrink","OutlinedInput","notched","endAdornment","InputAdornment","IconButton","Tooltip","CircularProgress","shouldDirty","shouldValidate","FormHelperText","multiline","rows","FormLabel","RadioGroup","Radio","UserSearch","users","setUsers","user","friendId","LFG","queueType","App","onAuthPage","setOnAuthPage","useLocation","exact","path","render","purple","createBreakpoints","createMuiTheme","common","transparent","fontFamily","fontWeight","h2","h3","h6","ReactDOM","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.2fe528bd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport StorefrontIcon from \"@material-ui/icons/Storefront\";\r\nimport GroupWorkIcon from \"@material-ui/icons/GroupWork\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/cute.svg\";\r\nimport { ListItemIcon, ListItemText, Avatar } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.modal + 1,\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  toolbarMargin: { ...theme.mixins.toolbar },\r\n  logoButton: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  logoText: {\r\n    textTransform: \"lowercase\",\r\n  },\r\n  logo: {\r\n    height: \"2.75rem\",\r\n    marginRight: \".5rem\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"1.75rem\",\r\n    },\r\n  },\r\n  tabContainer: { marginLeft: \"auto\" },\r\n  tab: {\r\n    ...theme.typography.tab,\r\n    minWidth: 10,\r\n    marginLeft: \"25px\",\r\n  },\r\n  button: { marginLeft: \"25px\", borderRadius: \"3px\" },\r\n  menu: { borderRadius: \"3px\", ...theme.mixins.toolbar },\r\n  menuItem: {\r\n    ...theme.typography.tab,\r\n    opacity: 0.7,\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  icon: {\r\n    verticalAlign: \"middle\",\r\n  },\r\n  nestedDrawer: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  drawer: {\r\n    minWidth: \"75%\",\r\n    height: \"100%\",\r\n  },\r\n  drawerItem: {\r\n    ...theme.typography.tab,\r\n    opacity: 0.7,\r\n  },\r\n  activeDrawerItem: {\r\n    ...theme.typography.tab,\r\n    opacity: 1,\r\n  },\r\n  drawerItemEmphasised: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n  },\r\n  drawerItemPushBottom: {\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  burgerButton: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  nav: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  userNav: {\r\n    marginTop: \"5em\",\r\n  },\r\n  avatar: {\r\n    height: \"2em\",\r\n    width: \"2em\",\r\n    textDecoration: \"none\",\r\n    marginLeft: \"25px\",\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const {\r\n    tabValue,\r\n    setTabValue,\r\n    menuSelectedIndex,\r\n    setMenuSelectedIndex,\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\n  const menuOptions = [\r\n    { name: \"about us\", href: \"/aboutus\" },\r\n    { name: \"faqs\", href: \"/faqs\" },\r\n    { name: \"coming soon\", href: \"/comingsoon\" },\r\n    { name: \"support us\", href: \"/support\" },\r\n  ];\r\n\r\n  let routes = [];\r\n\r\n  if (!props.currentUser) {\r\n    routes = [\r\n      {\r\n        name: \"About\",\r\n        href: \"/aboutus\",\r\n        icon: <InfoIcon />,\r\n        ariaOwns: anchorEl ? \"about-menu\" : undefined,\r\n        ariaPopup: anchorEl ? true : undefined,\r\n        mouseOver: (e) => handleMenuClick(e),\r\n      },\r\n\r\n      {\r\n        name: \"Community Standards\",\r\n        href: \"/communitystandards\",\r\n        icon: <ContactMailIcon />,\r\n      },\r\n    ];\r\n  } else {\r\n    routes = [\r\n      {\r\n        name: \"My Groups\",\r\n        href: \"/mygroups\",\r\n        icon: <GroupIcon />,\r\n      },\r\n      {\r\n        name: \"LFG\",\r\n        href: \"/lfg\",\r\n        icon: <SearchIcon />,\r\n      },\r\n      {\r\n        name: \"LFM\",\r\n        href: \"/lfm\",\r\n        icon: <SearchIcon />,\r\n      },\r\n    ];\r\n  }\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (window.location.pathname === routes[i].href) {\r\n        setTabValue(i);\r\n      }\r\n    }\r\n  }, [setTabValue, tabValue, routes]);\r\n\r\n  const handleTabChange = (e, index) => {\r\n    setTabValue(index);\r\n  };\r\n\r\n  const handleMenuClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = (e) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  const handleMenuItemClick = (e, i) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n    setMenuSelectedIndex(i);\r\n  };\r\n\r\n  const tabs = (\r\n    <>\r\n      <Tabs\r\n        value={tabValue}\r\n        onChange={handleTabChange}\r\n        className={classes.tabContainer}\r\n      >\r\n        {routes.map((route) => (\r\n          <Tab\r\n            key={route.name}\r\n            className={classes.tab}\r\n            label={route.name}\r\n            component={Link}\r\n            to={route.href}\r\n            aria-owns={route.ariaOwns}\r\n            aria-haspopup={route.ariaPopup}\r\n            onMouseEnter={route.mouseOver}\r\n          />\r\n        ))}\r\n      </Tabs>\r\n      {props.currentUser ? (\r\n        <Avatar\r\n          src=\"Test\"\r\n          alt={props.currentUser.username}\r\n          className={classes.avatar}\r\n          component={Link}\r\n          to=\"/profile\"\r\n        />\r\n      ) : (\r\n        <>\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            variant=\"outlined\"\r\n            component={Link}\r\n            to=\"/login\"\r\n            onClick={() => {\r\n              setTabValue(false);\r\n              setMenuSelectedIndex(false);\r\n            }}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            className={classes.button}\r\n            component={Link}\r\n            to=\"/register\"\r\n            onClick={() => {\r\n              setTabValue(false);\r\n              setMenuSelectedIndex(false);\r\n            }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </>\r\n      )}\r\n      <Menu\r\n        id=\"about-menu\"\r\n        anchorEl={anchorEl}\r\n        open={openMenu}\r\n        onClose={handleMenuClose}\r\n        MenuListProps={{\r\n          onMouseLeave: handleMenuClose,\r\n        }}\r\n        classes={{ paper: classes.menu }}\r\n        elevation={0}\r\n        keepMounted\r\n        style={{ zIndex: 1302 }}\r\n      >\r\n        {menuOptions.map((option, i) => (\r\n          <MenuItem\r\n            key={option.name}\r\n            onClick={(e) => {\r\n              handleMenuItemClick(e, i);\r\n              setTabValue(0);\r\n              handleMenuClose();\r\n            }}\r\n            classes={{ root: classes.menuItem }}\r\n            component={Link}\r\n            to={option.href}\r\n            selected={i === menuSelectedIndex && tabValue === 0}\r\n          >\r\n            {option.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </>\r\n  );\r\n\r\n  const drawer = (\r\n    <SwipeableDrawer\r\n      classes={{ root: classes.drawer, paper: classes.drawer }}\r\n      disableBackdropTransition={!iOS}\r\n      disableDiscovery={iOS}\r\n      anchor=\"left\"\r\n      open={drawerOpen}\r\n      onOpen={() => {\r\n        setDrawerOpen(true);\r\n      }}\r\n      onClose={() => setDrawerOpen(false)}\r\n    >\r\n      <div className={classes.toolbarMargin} />\r\n      <List component=\"nav\" className={classes.nav}>\r\n        {routes.map((route, i) => (\r\n          <ListItem\r\n            key={route.name}\r\n            divider\r\n            button\r\n            component={Link}\r\n            to={route.href}\r\n            selected={tabValue === i}\r\n            onClick={() => {\r\n              setOpenMenu(false);\r\n              setDrawerOpen(false);\r\n              setTabValue(i);\r\n              setMenuSelectedIndex(false);\r\n            }}\r\n            className={\r\n              tabValue === i ? classes.activeDrawerItem : classes.drawerItem\r\n            }\r\n          >\r\n            <ListItemIcon>{route.icon}</ListItemIcon>\r\n            <ListItemText disableTypography primary={route.name} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <List component=\"nav\" className={`${classes.nav} ${classes.userNav}`}>\r\n        {props.currentUser ? (\r\n          <>\r\n            <ListItem\r\n              divider\r\n              button\r\n              component={Link}\r\n              to=\"/profile\"\r\n              onClick={() => {\r\n                setTabValue(false);\r\n                setDrawerOpen(false);\r\n                setOpenMenu(false);\r\n              }}\r\n              className={`${classes.activeDrawerItem} ${classes.drawerItemEmphasised}`}\r\n            >\r\n              <ListItemIcon>\r\n                <Avatar src=\"Test\" alt={props.currentUser.username} />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                disableTypography\r\n                primary={props.currentUser.username}\r\n              />\r\n            </ListItem>\r\n            <ListItem\r\n              divider\r\n              button\r\n              onClick={() => {\r\n                setTabValue(false);\r\n                setDrawerOpen(false);\r\n                setOpenMenu(false);\r\n                localStorage.removeItem(\"jwt\");\r\n                props.setCurrentUser(null);\r\n              }}\r\n              className={classes.drawerItem}\r\n            >\r\n              <ListItemIcon>\r\n                <ListItemIcon>\r\n                  <ExitToAppIcon />\r\n                </ListItemIcon>\r\n              </ListItemIcon>\r\n              <ListItemText disableTypography primary=\"logout\" />\r\n            </ListItem>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <ListItem\r\n              divider\r\n              button\r\n              component={Link}\r\n              to=\"/login\"\r\n              onClick={() => {\r\n                setTabValue(false);\r\n                setDrawerOpen(false);\r\n                setOpenMenu(false);\r\n              }}\r\n              className={`${classes.activeDrawerItem}`}\r\n            >\r\n              <ListItemIcon>\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n              <ListItemText disableTypography primary=\"login\" />\r\n            </ListItem>\r\n            <ListItem\r\n              divider\r\n              button\r\n              component={Link}\r\n              to=\"/register\"\r\n              onClick={() => {\r\n                setTabValue(false);\r\n                setDrawerOpen(false);\r\n                setOpenMenu(false);\r\n              }}\r\n              className={`${classes.activeDrawerItem} ${classes.drawerItemEmphasised}`}\r\n            >\r\n              <ListItemIcon>\r\n                <ExitToAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText disableTypography primary=\"sign up\" />\r\n            </ListItem>\r\n          </>\r\n        )}\r\n      </List>\r\n    </SwipeableDrawer>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ElevationScroll {...props}>\r\n        <AppBar position=\"fixed\" color=\"transparent\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Button\r\n              component={Link}\r\n              to=\"/\"\r\n              onClick={() => setTabValue(false)}\r\n              disableRipple\r\n              className={classes.logoButton}\r\n            >\r\n              <img src={logo} alt=\"company logo\" className={classes.logo} />\r\n              <Typography\r\n                variant=\"h6\"\r\n                component=\"h1\"\r\n                className={classes.logoText}\r\n              >\r\n                <Typography variant=\"h6\" component=\"span\" color=\"primary\">\r\n                  lfg.\r\n                </Typography>\r\n                games\r\n              </Typography>\r\n            </Button>\r\n            {matches && (\r\n              <IconButton\r\n                onClick={() => setDrawerOpen(!drawerOpen)}\r\n                disableRipple\r\n                className={classes.burgerButton}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            )}\r\n            {matches ? drawer : tabs}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <div className={classes.toolbarMargin} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","module.exports = __webpack_public_path__ + \"static/media/crown.c68a34ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/wand.888791b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/sword.7584b356.svg\";","module.exports = __webpack_public_path__ + \"static/media/knife.36ba6675.svg\";","module.exports = __webpack_public_path__ + \"static/media/lfggames.70b7aa67.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport RedditIcon from \"@material-ui/icons/Reddit\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    borderTop: `1px solid ${theme.palette.text.primary}`,\r\n    width: \"100%\",\r\n  },\r\n  mainContainer: {},\r\n  link: {\r\n    ...theme.typography.tab,\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n  },\r\n  gridItem: {\r\n    margin: \"3em\",\r\n  },\r\n  social: {\r\n    height: \"1em\",\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: \"1.5em\",\r\n      width: \"1.5em\",\r\n    },\r\n  },\r\n  socialContainer: {\r\n    marginTop: \"1em\",\r\n  },\r\n}));\r\n\r\nconst Footer = (props) => {\r\n  const { setTabValue } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Hidden smDown>\r\n        <Grid container justify=\"center\" className={classes.mainContainer}>\r\n          <Grid item className={classes.gridItem}>\r\n            <Grid container direction=\"column\" spacing={2}>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"aboutus\"\r\n                onClick={() => {\r\n                  setTabValue(0);\r\n                }}\r\n                className={classes.link}\r\n              >\r\n                About Us\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"support\"\r\n                onClick={() => {\r\n                  setTabValue(0);\r\n                }}\r\n                className={classes.link}\r\n              >\r\n                Support Us\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"contact\"\r\n                onClick={() => {\r\n                  setTabValue(0);\r\n                }}\r\n                className={classes.link}\r\n              >\r\n                Contact Us\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item className={classes.gridItem}>\r\n            <Grid container direction=\"column\" spacing={2}>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"privacypolicy\"\r\n                className={classes.link}\r\n              >\r\n                Privacy Policy\r\n              </Grid>\r\n              <Grid item component={Link} to=\"terms\" className={classes.link}>\r\n                Terms and Conditions\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                component={Link}\r\n                to=\"communitystandards\"\r\n                className={classes.link}\r\n              >\r\n                Community Standards\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.socialContainer}\r\n      >\r\n        <Grid\r\n          item\r\n          component={\"a\"}\r\n          href=\"https://www.facebook.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <FacebookIcon className={classes.social} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={\"a\"}\r\n          href=\"https://www.twitter.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <TwitterIcon className={classes.social} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={\"a\"}\r\n          href=\"https://www.reddit.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <RedditIcon className={classes.social} />\r\n        </Grid>\r\n      </Grid>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport crown from \"../../assets/crown.svg\";\r\nimport cute from \"../../assets/cute.svg\";\r\nimport wand from \"../../assets/wand.svg\";\r\nimport sword from \"../../assets/sword.svg\";\r\nimport knife from \"../../assets/knife.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContainer: {\r\n    height: \"100vh\",\r\n  },\r\n  heroContent: {\r\n    [theme.breakpoints.up(\"md\")]: { transform: \"translateY(-50%)\" },\r\n  },\r\n  ctaButtons: {\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  subtitle: {\r\n    fontSize: \"1.25em\",\r\n  },\r\n  heroIcon: {\r\n    height: \"2em\",\r\n    width: \"2em\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: \"2.75em\",\r\n      width: \"2.75em\",\r\n    },\r\n  },\r\n  groupAvatar: {\r\n    width: \"3.5em\",\r\n    marginLeft: \"30px\",\r\n  },\r\n  moreInfoGrid: {\r\n    marginTop: \"8em\",\r\n  },\r\n  imageGrid: {\r\n    margin: \"0 2em\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst LandingPage = ({ currentUser }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.heroContainer}\r\n      >\r\n        <Grid item className={classes.heroContent}>\r\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\r\n            <Grid item>\r\n              <img src={wand} alt=\"logo\" className={classes.heroIcon} />\r\n            </Grid>\r\n            <Grid item>\r\n              <img src={sword} alt=\"logo\" className={classes.heroIcon} />\r\n            </Grid>\r\n            <Grid item>\r\n              <img src={crown} alt=\"logo\" className={classes.heroIcon} />\r\n            </Grid>\r\n            <Grid item>\r\n              <img src={cute} alt=\"logo\" className={classes.heroIcon} />\r\n            </Grid>\r\n            <Grid item>\r\n              <img src={knife} alt=\"logo\" className={classes.heroIcon} />\r\n            </Grid>\r\n          </Grid>\r\n          <Typography variant=\"h2\" align=\"center\">\r\n            <Typography variant=\"h2\" component=\"span\" color=\"primary\">\r\n              lfg\r\n            </Typography>{\" \"}\r\n            for the tabletop.\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            align=\"center\"\r\n            className={classes.subtitle}\r\n          >\r\n            Gather your party and venture forth.\r\n          </Typography>\r\n\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            className={classes.ctaButtons}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                component={Link}\r\n                to={currentUser ? \"/lfg\" : \"/register\"}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Join an Adventure\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl =\r\n  process.env.NODE_ENV !== \"production\"\r\n    ? \"https://localhost:5001/api\"\r\n    : \"https://lfg.games/api\";\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: baseUrl,\r\n});\r\n\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (token) {\r\n      config.headers.Authorization = \"Bearer \" + token;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default apiClient;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\n\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport throttle from \"lodash/throttle\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n/*Todo:: All google autocomplete code is taken from Material Labs documentation and could use a tidy up */\r\n\r\nfunction loadScript(src, position, id) {\r\n  if (!position) {\r\n    return;\r\n  }\r\n\r\n  const script = document.createElement(\"script\");\r\n  script.setAttribute(\"async\", \"\");\r\n  script.setAttribute(\"id\", id);\r\n  script.src = src;\r\n  position.appendChild(script);\r\n}\r\n\r\nconst googleAutoCompleteService = { current: null };\r\n\r\nconst GooglePlacesLocationSearch = ({\r\n  register,\r\n  setValue,\r\n  classes,\r\n  errors,\r\n}) => {\r\n  const loaded = React.useRef(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [locationValue, setLocationValue] = React.useState(null);\r\n  const [locationInputValue, setLocationInputValue] = React.useState(\"\");\r\n\r\n  if (typeof window !== \"undefined\" && !loaded.current) {\r\n    if (!document.querySelector(\"#google-maps\")) {\r\n      loadScript(\r\n        `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_PLACES_API_KEY}&libraries=places`,\r\n        document.querySelector(\"head\"),\r\n        \"google-maps\"\r\n      );\r\n    }\r\n\r\n    loaded.current = true;\r\n  }\r\n\r\n  const fetch = useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        googleAutoCompleteService.current.getPlacePredictions(\r\n          request,\r\n          callback\r\n        );\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    register(\"googleplaceid\");\r\n    let active = true;\r\n\r\n    if (!googleAutoCompleteService.current && window.google) {\r\n      googleAutoCompleteService.current = new window.google.maps.places.AutocompleteService();\r\n    }\r\n    if (!googleAutoCompleteService.current) {\r\n      return undefined;\r\n    }\r\n\r\n    if (locationInputValue === \"\") {\r\n      setOptions(locationValue ? [locationValue] : []);\r\n      return undefined;\r\n    }\r\n\r\n    fetch({ input: locationInputValue }, (results) => {\r\n      if (active) {\r\n        let newOptions = [];\r\n\r\n        if (locationValue) {\r\n          newOptions = [locationValue];\r\n        }\r\n\r\n        if (results) {\r\n          newOptions = [...newOptions, ...results];\r\n        }\r\n\r\n        setOptions(newOptions);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [locationValue, locationInputValue, fetch, register]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      filterOptions={(x) => x}\r\n      options={options}\r\n      noOptionsText=\"start typing a location to see your options\"\r\n      getOptionLabel={(option) =>\r\n        typeof option === \"string\" ? option : option.description\r\n      }\r\n      size=\"small\"\r\n      autoComplete\r\n      includeInputInList\r\n      filterSelectedOptions\r\n      name=\"googleplaceid\"\r\n      onChange={(event, newValue) => {\r\n        setOptions(newValue ? [newValue, ...options] : options);\r\n        setLocationValue(newValue);\r\n        setValue(\"googleplaceid\", newValue ? newValue.place_id : null);\r\n      }}\r\n      onInputChange={(event, newInputValue) => {\r\n        setLocationInputValue(newInputValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          className={classes.formInput}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"location\"\r\n          error={Boolean(errors.googleplaceid)}\r\n          helperText={\r\n            errors.googleplaceid\r\n              ? errors.googleplaceid.message\r\n              : \"we use your location to group you with nearby players, be as specific as you like but we recommend city/town level as a minimum\"\r\n          }\r\n        />\r\n      )}\r\n      renderOption={(option) => {\r\n        const matches =\r\n          option.structured_formatting.main_text_matched_substrings;\r\n        const parts = parse(\r\n          option.structured_formatting.main_text,\r\n          matches.map((match) => [match.offset, match.offset + match.length])\r\n        );\r\n\r\n        return (\r\n          <Grid container alignItems=\"center\">\r\n            <Grid item>\r\n              <LocationOnIcon className={classes.icon} />\r\n            </Grid>\r\n            <Grid item xs>\r\n              {parts.map((part, index) => (\r\n                <span\r\n                  key={index}\r\n                  style={{ fontWeight: part.highlight ? 700 : 400 }}\r\n                >\r\n                  {part.text}\r\n                </span>\r\n              ))}\r\n\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                {option.structured_formatting.secondary_text}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GooglePlacesLocationSearch;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"../../ApiClient\";\r\nimport GooglePlacesLocationSearch from \"../Global/GooglePlacesLocationSearch\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  logo: {\r\n    maxWidth: \"3em\",\r\n    margin: \"2em 0em\",\r\n  },\r\n  formInput: {\r\n    margin: \"1em 0\",\r\n  },\r\n  button: {\r\n    margin: \"2em 0\",\r\n  },\r\n  labelColour: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  checkboxLabel: {\r\n    marginTop: \"1em\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  googleplaceid: yup.string().required(\"location is required\"),\r\n  username: yup.string().required(\"username required\"),\r\n  emailaddress: yup.string().email(\"invalid email\").required(\"invalid email\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password required\")\r\n    .min(6, \"Password must be a minimum of 6 characters\")\r\n    .matches(\r\n      /* eslint-disable no-useless-escape */\r\n      /^.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?].*$/,\r\n      \"Password must contain a special character\"\r\n    ),\r\n  dateofbirth: yup\r\n    .string()\r\n    .nullable()\r\n    .required(\"date of birth is required\")\r\n    .test(\r\n      \"\",\r\n      `We aren't currently accepting registrations from children under 13`,\r\n      function (value) {\r\n        return moment().diff(moment(value), \"years\") >= 13;\r\n      }\r\n    ),\r\n  inperson: yup.bool(),\r\n  online: yup.bool().when(\"inperson\", {\r\n    is: false,\r\n    then: yup.bool().oneOf([true], \"You must play either online or in person\"),\r\n  }),\r\n  termsandconditions: yup.bool().oneOf([true], \"You must agree to this\"),\r\n});\r\n\r\nconst RegistrationForm = ({ setCurrentUser }) => {\r\n  const classes = useStyle();\r\n  const {\r\n    control,\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    setValue,\r\n    setError,\r\n    formState,\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    mode: \"onTouched\",\r\n    criteriaMode: \"all\",\r\n  });\r\n\r\n  const onSubmit = (data, errors) => {\r\n    data.dateofbirth = moment(data.dateofbirth).format(\"YYYY-MM-DD\");\r\n    axios\r\n      .post(\"auth\", data)\r\n      .then((response) => {\r\n        localStorage.setItem(\"jwt\", response.data);\r\n        setCurrentUser(true);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data.serverError) {\r\n          setError(\"form\", {\r\n            type: \"manual\",\r\n            message: error.response.data.serverError,\r\n          });\r\n        } else if (error.response.data.errors) {\r\n          for (let validationError in error.response.data.errors) {\r\n            //TODO:: I can only work out a way to display one error at a time right now on the client validation so matching this from a server side pespective\r\n            setError(validationError.toLowerCase(), {\r\n              type: \"manual\",\r\n              message: error.response.data.errors[validationError][0],\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid item>\r\n          <TextField\r\n            size=\"small\"\r\n            fullWidth\r\n            className={classes.formInput}\r\n            variant=\"outlined\"\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            inputRef={register}\r\n            error={Boolean(errors.username)}\r\n            helperText={errors.username && errors.username.message}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            size=\"small\"\r\n            fullWidth\r\n            className={classes.formInput}\r\n            variant=\"outlined\"\r\n            name=\"emailaddress\"\r\n            label=\"Email Address\"\r\n            inputRef={register}\r\n            error={Boolean(errors.emailaddress)}\r\n            helperText={errors.emailaddress && errors.emailaddress.message}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            size=\"small\"\r\n            className={classes.formInput}\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            fullWidth\r\n            inputRef={register}\r\n            type=\"password\"\r\n            error={Boolean(errors.password)}\r\n            helperText={errors.password && errors.password.message}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n            <Controller\r\n              size=\"small\"\r\n              initialFocusedDate={null}\r\n              defaultValue={null}\r\n              control={control}\r\n              as={KeyboardDatePicker}\r\n              className={classes.formInput}\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              openTo=\"year\"\r\n              name=\"dateofbirth\"\r\n              label=\"Date of Birth\"\r\n              fullWidth\r\n              format={\"YYYY-MM-DD\"}\r\n              maxDate={moment().add(-13, \"years\")}\r\n              disableFuture\r\n              placeholder={null}\r\n              inputRef={register}\r\n              error={Boolean(errors.dateofbirth)}\r\n              helperText={errors.dateofbirth && errors.dateofbirth.message}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <FormControlLabel\r\n            className={classes.labelColour}\r\n            control={<Checkbox name=\"termsandconditions\" inputRef={register} />}\r\n            label=\"I agree to the community standards, privacy policy and terms and conditions\"\r\n          />\r\n          <Typography variant=\"body2\" className={classes.error}>\r\n            {errors.termsandconditions && errors.termsandconditions.message}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"body2\" className={classes.error}>\r\n            {errors.form && errors.form.message}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item container spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"body2\"\r\n              to=\"/login\"\r\n              component={Link}\r\n              className={classes.link}\r\n              color=\"primary\"\r\n            >\r\n              Login Instead\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              disabled={formState.isSubmitting || !formState.isDirty}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              type=\"submit\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport logo from \"../../assets/cute.svg\";\r\nimport RegistrationForm from \"../Features/RegistrationForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  title: {\r\n    marginBottom: \"1em\",\r\n  },\r\n  container: {\r\n    minHeight: \"100vh\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(4),\r\n  },\r\n  logo: {\r\n    height: \"2.75rem\",\r\n    marginRight: \".5rem\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      height: \"1.75rem\",\r\n    },\r\n  },\r\n  header: {\r\n    color: \"white\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n  },\r\n  formContainer: {\r\n    margin: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst RegisterPage = ({ setCurrentUser, currentUser }) => {\r\n  const classes = useStyle();\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const innerContent = (\r\n    <>\r\n      <Paper square className={classes.paper}>\r\n        <Grid item>\r\n          <Link to=\"/\" className={classes.link}>\r\n            <img src={logo} alt=\"company logo\" className={classes.logo} />\r\n            <Typography variant=\"h6\" component=\"h1\" className={classes.header}>\r\n              <Typography variant=\"h6\" component=\"span\" color=\"primary\">\r\n                lfg.\r\n              </Typography>\r\n              games\r\n            </Typography>\r\n          </Link>\r\n          <Typography variant=\"body1\">Sign Up</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <RegistrationForm setCurrentUser={setCurrentUser} />\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Container fixed maxWidth=\"md\">\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        className={classes.container}\r\n      >\r\n        {innerContent}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, Paper } from \"@material-ui/core\";\r\n\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\n\r\nimport logo from \"../../assets/cute.svg\";\r\nimport ApiClient from \"../../ApiClient\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  logo: {\r\n    height: \"2.75rem\",\r\n    marginRight: \".5rem\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      height: \"1.75rem\",\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(4),\r\n  },\r\n  header: {\r\n    color: \"white\",\r\n  },\r\n  container: {\r\n    height: \"100vh\",\r\n  },\r\n  formInput: {\r\n    margin: \"1em 0\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup.string().required(\"username required\"),\r\n  password: yup.string().required(\"password required\"),\r\n});\r\n\r\nconst LoginPage = ({ setCurrentUser, currentUser }) => {\r\n  const classes = useStyle();\r\n\r\n  const { register, handleSubmit, errors, formState, setError } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    mode: \"onTouched\",\r\n    criteriaMode: \"all\",\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    ApiClient.post(\"/auth/login\", data)\r\n      .then((response) => {\r\n        localStorage.setItem(\"jwt\", response.data);\r\n        setCurrentUser(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError(\"form\", {\r\n          type: \"manual\",\r\n          message: error.response.data.serverError,\r\n        });\r\n      });\r\n  };\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container fixed maxWidth=\"md\">\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        className={classes.container}\r\n      >\r\n        <Paper square className={classes.paper}>\r\n          <Grid item>\r\n            <Link to=\"/\" className={classes.link}>\r\n              <img src={logo} alt=\"company logo\" className={classes.logo} />\r\n              <Typography\r\n                variant=\"h6\"\r\n                component=\"h1\"\r\n                className={classes.header}\r\n              >\r\n                <Typography variant=\"h6\" component=\"span\" color=\"primary\">\r\n                  lfg.\r\n                </Typography>\r\n                games\r\n              </Typography>\r\n            </Link>\r\n            <Typography variant=\"body1\">Login</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  inputRef={register}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className={classes.formInput}\r\n                  size=\"small\"\r\n                  helperText={errors.username && errors.username.message}\r\n                  error={Boolean(errors.username)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  inputRef={register}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className={classes.formInput}\r\n                  size=\"small\"\r\n                  type=\"password\"\r\n                  helperText={errors.password && errors.password.message}\r\n                  error={Boolean(errors.password)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" className={classes.error}>\r\n                  {errors.form && errors.form.message}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    to=\"/register\"\r\n                    component={Link}\r\n                    className={classes.link}\r\n                    color=\"primary\"\r\n                  >\r\n                    Register Instead\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={formState.isSubmitting || !formState.isDirty}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent,\r\n  Button,\r\n  CardActions,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport apiClient from \"../../ApiClient\";\r\nimport banner from \"../../assets/lfggames.png\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  noGroupContainer: {\r\n    minHeight: \"100vh\",\r\n    textAlign: \"center\",\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    minWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  cardContent: {\r\n    minHeight: \"150px\",\r\n    maxHeight: \"150px\",\r\n    overflow: \"hidden\",\r\n  },\r\n  subtitle1: {\r\n    fontSize: \"1em\",\r\n  },\r\n  footerMargin: {\r\n    margin: \"2em 0em\",\r\n  },\r\n}));\r\n\r\nconst MyGroups = () => {\r\n  const classes = useStyle();\r\n  const [groups, setGroups] = useState([]);\r\n\r\n  useEffect(() => {\r\n    apiClient.get(\"/user/groups\").then((response) => setGroups(response.data));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {groups && groups.length === 0 ? (\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          className={classes.noGroupContainer}\r\n        >\r\n          <Typography variant=\"body1\">\r\n            looks like you don't have any groups yet :( <br />\r\n            <Link to=\"/creategroup\" className={classes.link}>\r\n              create a private one now\r\n            </Link>{\" \"}\r\n            or{\" \"}\r\n            <Link to=\"/findgroups\" className={classes.link}>\r\n              use lfg\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      ) : (\r\n        <Container maxWidth={\"lg\"}>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Typography variant=\"h2\" gutterBottom>\r\n              my groups\r\n            </Typography>\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n              {groups.map((group) => (\r\n                <Grid item key={group.groupName}>\r\n                  <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        image={banner}\r\n                        title={group.groupName}\r\n                        className={classes.media}\r\n                      />\r\n                      <CardContent className={classes.cardContent}>\r\n                        <Typography variant=\"h5\" component=\"h3\">\r\n                          {group.groupName}\r\n                        </Typography>\r\n                        <Typography\r\n                          gutterBottom\r\n                          variant=\"subtitle1\"\r\n                          color=\"primary\"\r\n                          className={classes.subtitle1}\r\n                        >\r\n                          {group.memberIds.length}{\" \"}\r\n                          {group.memberIds.length === 1 ? \"member\" : \"members\"}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                          component=\"p\"\r\n                        >\r\n                          {group.description}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        invite more players\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        view group\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n            <Typography\r\n              variant=\"body1\"\r\n              align=\"center\"\r\n              className={classes.footerMargin}\r\n            >\r\n              looking for a new adventure? <br />\r\n              <Link to=\"/creategroup\" className={classes.link}>\r\n                create a new private group\r\n              </Link>{\" \"}\r\n              or{\" \"}\r\n              <Link to=\"/lfg\" className={classes.link}>\r\n                use lfg\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyGroups;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Grid,\r\n  makeStyles,\r\n  OutlinedInput,\r\n  InputLabel,\r\n  FormControl,\r\n  Container,\r\n  Tooltip,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Typography,\r\n  Button,\r\n  FormHelperText,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport CasinoOutlinedIcon from \"@material-ui/icons/CasinoOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as yup from \"yup\";\r\nimport apiClient from \"../../ApiClient\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    minHeight: \"100vh\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n  },\r\n  subtitle: {\r\n    marginLeft: \".5em\",\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  groupname: yup\r\n    .string()\r\n    .required(\r\n      \"group name is required, can't think of one? hit the random button\"\r\n    )\r\n    .min(\r\n      5,\r\n      \"group names must be a minimum of 5 characters, can't think of one? hit the random button\"\r\n    ),\r\n\r\n  description: yup\r\n    .string()\r\n    .required(\"description is required\")\r\n    .min(\r\n      10,\r\n      \"descriptions should be a minimum of 10 characters, describe what your group is\"\r\n    ),\r\n});\r\n\r\nconst CreateGroup = () => {\r\n  const classes = useStyle();\r\n  const [loadingRandom, setLoadingRandom] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    control,\r\n    setValue,\r\n    getValues,\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    mode: \"onTouched\",\r\n    criteriaMode: \"all\",\r\n    defaultValues: { privacyLevel: \"private\" },\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    apiClient\r\n      .post(\"/groups\", data)\r\n      .then((response) => console.log(response.data));\r\n  };\r\n\r\n  const getRandomName = () => {\r\n    setLoadingRandom(true);\r\n    apiClient.get(\"/groups/randomname\").then((response) => {\r\n      setValue(\"groupname\", response.data, {\r\n        shouldDirty: true,\r\n        shouldValidate: true,\r\n      });\r\n      setLoadingRandom(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth={\"md\"}>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        className={classes.container}\r\n      >\r\n        <Grid container item>\r\n          <Grid item>\r\n            <Typography variant=\"h2\">create a private group</Typography>\r\n            <Typography variant=\"subtitle1\" className={classes.subtitle}>\r\n              public games can be accessed via{\" \"}\r\n              <Link to=\"/lfg\" className={classes.link}>\r\n                lfg\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid item>\r\n              <FormControl\r\n                fullWidth\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                className={classes.margin}\r\n              >\r\n                <InputLabel\r\n                  shrink={Boolean(getValues(\"groupname\"))}\r\n                  error={Boolean(errors.groupname)}\r\n                >\r\n                  group name\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  notched={Boolean(getValues(\"groupname\"))}\r\n                  label=\"group name\"\r\n                  name=\"groupname\"\r\n                  inputRef={register}\r\n                  error={Boolean(errors.groupname)}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton>\r\n                        <Tooltip title=\"random\">\r\n                          {loadingRandom ? (\r\n                            <CircularProgress color=\"primary\" size={20} />\r\n                          ) : (\r\n                            <CasinoOutlinedIcon onClick={getRandomName} />\r\n                          )}\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                ></OutlinedInput>\r\n                <FormHelperText error={Boolean(errors.groupname)}>\r\n                  {errors.groupname && errors.groupname.message}\r\n                </FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"description\"\r\n                size=\"small\"\r\n                label=\"description\"\r\n                inputRef={register}\r\n                multiline={true}\r\n                rows=\"10\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                className={classes.margin}\r\n                error={Boolean(errors.description)}\r\n                helperText={errors.description && errors.description.message}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl component=\"fieldset\" className={classes.margin}>\r\n                <FormLabel>privacy level</FormLabel>\r\n                <Controller\r\n                  as={\r\n                    <RadioGroup>\r\n                      <FormControlLabel\r\n                        value=\"private\"\r\n                        control={<Radio />}\r\n                        label=\"private - no one can join unless explicitly invited by the groups leader\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"friends\"\r\n                        control={<Radio />}\r\n                        label=\"friends only - friends of the group creator can join, anyone else will need an invite\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"groupfriends\"\r\n                        control={<Radio />}\r\n                        label=\"group friends - friends of any existing group member can join, anyone else will need an invite\"\r\n                      />\r\n                    </RadioGroup>\r\n                  }\r\n                  control={control}\r\n                  name=\"privacyLevel\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              create group\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateGroup;\r\n","import { Button, Container, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport apiClient from \"../../ApiClient\";\r\n\r\nconst UserSearch = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    apiClient.get(\"/users\").then((response) => setUsers(response.data));\r\n  }, []);\r\n\r\n  const toggleFriend = (id) => {\r\n    apiClient.post(\"/user/friends\", { friendId: id });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth={\"lg\"}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Typography variant=\"h2\" gutterBottom>\r\n          Looking for More\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        {users.map((user) => (\r\n          <Grid\r\n            key={user.id}\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            {user.username}\r\n            <Button onClick={() => toggleFriend(user.id)}>Add Friend</Button>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserSearch;\r\n","import { Button, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport apiClient from \"../../ApiClient\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    minHeight: \"100vh\",\r\n  },\r\n  button: {\r\n    margin: \"2em\",\r\n  },\r\n}));\r\n\r\nconst LFG = () => {\r\n  const classes = useStyles();\r\n\r\n  const onClick = (queueType) => {\r\n    apiClient.post(\"/groupfinder/users\", {\r\n      queueType: queueType === \"online\" ? 0 : 1,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.container}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\" align=\"center\">\r\n          looking for group\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            onClick(\"online\");\r\n          }}\r\n        >\r\n          find an online group\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            onClick(\"inPerson\");\r\n          }}\r\n        >\r\n          find an in person group\r\n        </Button>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"body1\" align=\"center\">\r\n          prefer to do it yourself?\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          component={Link}\r\n          to=\"/creategroup\"\r\n        >\r\n          create a group\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LFG;\r\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./ui/Header\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport Footer from \"./ui/Footer\";\nimport LandingPage from \"./Pages/LandingPage\";\nimport RegisterPage from \"./Pages/RegisterPage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport ApiClient from \"../ApiClient\";\nimport MyGroups from \"./Pages/MyGroups\";\nimport CreateGroup from \"./Pages/CreateGroup\";\nimport UserSearch from \"./Pages/UserSearch\";\nimport LFG from \"./Pages/LFG\";\n\nfunction App() {\n  const [menuSelectedIndex, setMenuSelectedIndex] = useState(0);\n  const [tabValue, setTabValue] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const [onAuthPage, setOnAuthPage] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log(location);\n    if (location.pathname === \"/login\" || location.pathname === \"/register\") {\n      setOnAuthPage(true);\n    } else {\n      setOnAuthPage(false);\n    }\n  }, [location]);\n\n  useEffect(() => {\n    if (!currentUser || currentUser === true) {\n      if (localStorage.getItem(\"jwt\")) {\n        ApiClient.get(\"/auth\")\n          .then((response) => setCurrentUser(response.data))\n          .catch((error) => localStorage.removeItem(\"jwt\"));\n      }\n    }\n  }, [currentUser]);\n\n  return (\n    <>\n      {!onAuthPage && (\n        <Header\n          tabValue={tabValue}\n          setTabValue={setTabValue}\n          menuSelectedIndex={menuSelectedIndex}\n          setMenuSelectedIndex={setMenuSelectedIndex}\n          currentUser={currentUser}\n          setCurrentUser={setCurrentUser}\n        />\n      )}\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <LandingPage {...props} currentUser={currentUser} />\n          )}\n        ></Route>\n        <Route exact path=\"/mygroups\" component={MyGroups}></Route>\n        <Route exact path=\"/creategroup\" component={CreateGroup} />\n        <Route\n          exact\n          path=\"/aboutus\"\n          component={() => <div>About Us</div>}\n        ></Route>\n        <Route\n          exact\n          path=\"/comingsoon\"\n          component={() => <div>Coming Soon</div>}\n        ></Route>\n        <Route exact path=\"/faqs\" component={() => <div>FAQs</div>}></Route>\n        <Route exact path=\"/merch\" component={() => <div>Merch</div>}></Route>\n        <Route\n          exact\n          path=\"/partners\"\n          component={() => <div>Partners</div>}\n        ></Route>\n        <Route\n          exact\n          path=\"/support\"\n          component={() => <div>Support</div>}\n        ></Route>\n        <Route\n          exact\n          path=\"/contact\"\n          component={() => <div>Contact</div>}\n        ></Route>\n        <Route\n          exact\n          path=\"/communitystandards\"\n          component={() => <div>Community Standards</div>}\n        ></Route>\n        <Route\n          exact\n          path=\"/login\"\n          render={(props) => (\n            <LoginPage\n              {...props}\n              setCurrentUser={setCurrentUser}\n              currentUser={currentUser}\n            />\n          )}\n        ></Route>\n        <Route exact path=\"/lfm\" component={UserSearch}></Route>\n        <Route exact path=\"/lfg\" component={LFG}></Route>\n        <Route\n          exact\n          path=\"/register\"\n          render={(props) => (\n            <RegisterPage\n              {...props}\n              setCurrentUser={setCurrentUser}\n              currentUser={currentUser}\n            />\n          )}\n        ></Route>\n      </Switch>\n      {!onAuthPage && (\n        <Footer\n          tabValue={tabValue}\n          setTabValue={setTabValue}\n          menuSelectedIndex={menuSelectedIndex}\n          setMenuSelectedIndex={setMenuSelectedIndex}\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport createBreakpoints from \"@material-ui/core/styles/createBreakpoints\";\r\n\r\nconst purple = \"rgb(207,146,255)\";\r\nconst breakpoints = createBreakpoints({});\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    common: {\r\n      purple: `${purple}`,\r\n      transparent: \"rgba(0,0,0,0)\",\r\n    },\r\n    type: \"dark\",\r\n    primary: {\r\n      main: `${purple}`,\r\n    },\r\n    secondary: {\r\n      main: `${purple}`,\r\n    },\r\n  },\r\n  typography: {\r\n    button: {\r\n      fontFamily: \"'Raleway', sans-serif;\",\r\n      fontWeight: 600,\r\n      textTransform: \"none\",\r\n    },\r\n    tab: {\r\n      fontFamily: \"'Raleway', sans-serif;\",\r\n      fontWeight: 600,\r\n      textTransform: \"none\",\r\n    },\r\n    h2: {\r\n      fontFamily: \"'Raleway', 'sans-serif'\",\r\n    },\r\n    h3: {\r\n      fontFamily: \"'Raleway', 'sans-serif'\",\r\n      color: `${purple}`,\r\n    },\r\n    h6: {\r\n      fontWeight: 400,\r\n      [breakpoints.down(\"xs\")]: {\r\n        fontSize: \"1rem\",\r\n      },\r\n    },\r\n    fontSize: 12,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./components/ui/Theme\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Router>\n      <App />\n    </Router>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/cute.2005b7d8.svg\";"],"sourceRoot":""}